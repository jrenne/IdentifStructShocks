xlab = "", ylab = ifelse(shock==1,
paste("Resp. of ",
names.var[variable],"...",sep=""),""),
main = ifelse(variable==1,paste("... to shock η", shock, sep = ""),"")
)}
}
library(vars)   # provides 'VARselect' function
library(IdSS)   # dataset is included here
First.date <- "1975-04-01"
Last.date  <- "2019-01-01"
data <- QuarterlyUS
data <- data[(data$date >= First.date) & (data$date <= Last.date), ]
TT <- dim(data)[1]
data$dy <- c(NaN,log(data$GDPC1[2:TT]/data$GDPC1[1:(TT-1)]))
data$pi <- c(NaN,log(data$GDPDEF[2:TT]/data$GDPDEF[1:(TT-1)]))
data <- data[complete.cases(data),]
Y <- data[c("dy","pi","FFR")]
#VARselect(Y, lag.max = 24)
p <- 3
estVAR <- VAR(Y, p = p) # estimate the VAR model
Phi <- Acoef(estVAR)
eps <- residuals(estVAR)
Omega <- var(eps) # covariance matrix of OLS residuals
B <- t(chol(Omega)) # Cholesky decomposition of Omega (lower triangular)
nb.sim <- 100
n <- dim(Y)[2] # number of endogenous variables
par(mfrow = c(n, n))
par(plt = c(.3, .95, .2, .8))
Model <- list(c = c, Phi = Phi, B = B)
names.var <- c("Inflation", "Output gap", "Interest rate")
for (variable in 1:n) {
for (shock in 1:n) {
eta0 <- rep(0, n)
eta0[shock] <- 1
res.sim <- simul.VAR(c = NaN, Phi, B, nb.sim = nb.sim, indic.IRF = 1,
u.shock = eta0)
plot(res.sim[, variable], type = "l", lwd = 2, las = 1,
xlab = "", ylab = ifelse(shock==1,
paste("Resp. of ",
names.var[variable],"...",sep=""),""),
main = ifelse(variable==1,paste("... to shock η", shock, sep = ""),"")
)}
}
# Compute (Id - Phi)^{-1}:
PHI <- make.PHI(Phi)
sum.PHI.k <- solve(diag(dim(PHI)[1]) - PHI)[1:n,1:n]
loss <- function(param){
B <- matrix(param,n,n)
X <- Omega - B %*% t(B)
Theta <- sum.PHI.k[1:n,1:n] %*% B
loss <- 100000 * ( sum(X^2) + Theta[1,1]^2 + B[1,3]^2 + B[2,3]^2)
return(loss)
}
res.opt <- optim(c(diag(n)),loss,method="BFGS",hessian=FALSE)
print(res.opt$par)
B <- matrix(res.opt$par,n,n)
n <- dim(Y)[2] # number of endogenous variables
par(mfrow = c(n, n))
par(plt = c(.3, .95, .2, .8))
Model <- list(c = c, Phi = Phi, B = B)
names.var <- c("Inflation", "Output gap", "Interest rate")
for (variable in 1:n) {
for (shock in 1:n) {
eta0 <- rep(0, n)
eta0[shock] <- 1
res.sim <- simul.VAR(c = NaN, Phi, B, nb.sim = nb.sim, indic.IRF = 1,
u.shock = eta0)
plot(res.sim[, variable], type = "l", lwd = 2, las = 1,
xlab = "", ylab = ifelse(shock==1,
paste("Resp. of ",
names.var[variable],"...",sep=""),""),
main = ifelse(variable==1,paste("... to shock η", shock, sep = ""),"")
)}
}
library(vars)   # provides 'VARselect' function
library(IdSS)   # dataset is included here
First.date <- "1975-04-01"
Last.date  <- "2019-01-01"
data <- QuarterlyUS
data <- data[(data$date >= First.date) & (data$date <= Last.date), ]
TT <- dim(data)[1]
data$dy <- c(NaN,log(data$GDPC1[2:TT]/data$GDPC1[1:(TT-1)]))
data$pi <- c(NaN,log(data$GDPDEF[2:TT]/data$GDPDEF[1:(TT-1)]))
data <- data[complete.cases(data),]
Y <- data[c("dy","pi","FFR")]
#VARselect(Y, lag.max = 24)
p <- 3
estVAR <- VAR(Y, p = p) # estimate the VAR model
Phi <- Acoef(estVAR)
eps <- residuals(estVAR)
Omega <- var(eps) # covariance matrix of OLS residuals
B <- t(chol(Omega)) # Cholesky decomposition of Omega (lower triangular)
nb.sim <- 100
n <- dim(Y)[2] # number of endogenous variables
par(mfrow = c(n, n))
par(plt = c(.3, .95, .2, .8))
Model <- list(c = c, Phi = Phi, B = B)
names.var <- c("Inflation", "Output gap", "Interest rate")
for (variable in 1:n) {
for (shock in 1:n) {
eta0 <- rep(0, n)
eta0[shock] <- 1
res.sim <- simul.VAR(c = NaN, Phi, B, nb.sim = nb.sim, indic.IRF = 1,
u.shock = eta0)
plot(res.sim[, variable], type = "l", lwd = 2, las = 1,
xlab = "", ylab = ifelse(shock==1,
paste("Resp. of ",
names.var[variable],"...",sep=""),""),
main = ifelse(variable==1,paste("... to shock η", shock, sep = ""),"")
)}
}
# Compute (Id - Phi)^{-1}:
PHI <- make.PHI(Phi)
sum.PHI.k <- solve(diag(dim(PHI)[1]) - PHI)[1:n,1:n]
loss <- function(param){
B <- matrix(param,n,n)
X <- Omega - B %*% t(B)
Theta <- sum.PHI.k[1:n,1:n] %*% B
loss <- 100000 * ( sum(X^2) + Theta[1,2]^2 + Theta[1,3]^2 + B[2,3]^2)
return(loss)
}
res.opt <- optim(c(diag(n)),loss,method="BFGS",hessian=FALSE)
print(res.opt$par)
B <- matrix(res.opt$par,n,n)
n <- dim(Y)[2] # number of endogenous variables
par(mfrow = c(n, n))
par(plt = c(.3, .95, .2, .8))
Model <- list(c = c, Phi = Phi, B = B)
names.var <- c("Inflation", "Output gap", "Interest rate")
for (variable in 1:n) {
for (shock in 1:n) {
eta0 <- rep(0, n)
eta0[shock] <- 1
res.sim <- simul.VAR(c = NaN, Phi, B, nb.sim = nb.sim, indic.IRF = 1,
u.shock = eta0)
plot(res.sim[, variable], type = "l", lwd = 2, las = 1,
xlab = "", ylab = ifelse(shock==1,
paste("Resp. of ",
names.var[variable],"...",sep=""),""),
main = ifelse(variable==1,paste("... to shock η", shock, sep = ""),"")
)}
}
QuarterlyUS$date
First.date <- QuarterlyUS$date[1]
Last.date <- tsail(QuarterlyUS$date,1)
First.date <- QuarterlyUS$date[1]
Last.date  <- tail(QuarterlyUS$date,1)
First.date
Last.date
library(vars)   # provides 'VARselect' function
library(IdSS)   # dataset is included here
First.date <- "1975-04-01"
Last.date  <- "2019-01-01"
First.date <- QuarterlyUS$date[1]
Last.date  <- tail(QuarterlyUS$date,1)
data <- QuarterlyUS
data <- data[(data$date >= First.date) & (data$date <= Last.date), ]
TT <- dim(data)[1]
data$dy <- c(NaN,log(data$GDPC1[2:TT]/data$GDPC1[1:(TT-1)]))
data$pi <- c(NaN,log(data$GDPDEF[2:TT]/data$GDPDEF[1:(TT-1)]))
data <- data[complete.cases(data),]
Y <- data[c("dy","pi","FFR")]
#VARselect(Y, lag.max = 24)
p <- 3
estVAR <- VAR(Y, p = p) # estimate the VAR model
Phi <- Acoef(estVAR)
eps <- residuals(estVAR)
Omega <- var(eps) # covariance matrix of OLS residuals
B <- t(chol(Omega)) # Cholesky decomposition of Omega (lower triangular)
nb.sim <- 100
n <- dim(Y)[2] # number of endogenous variables
par(mfrow = c(n, n))
par(plt = c(.3, .95, .2, .8))
Model <- list(c = c, Phi = Phi, B = B)
names.var <- c("Inflation", "Output gap", "Interest rate")
for (variable in 1:n) {
for (shock in 1:n) {
eta0 <- rep(0, n)
eta0[shock] <- 1
res.sim <- simul.VAR(c = NaN, Phi, B, nb.sim = nb.sim, indic.IRF = 1,
u.shock = eta0)
plot(res.sim[, variable], type = "l", lwd = 2, las = 1,
xlab = "", ylab = ifelse(shock==1,
paste("Resp. of ",
names.var[variable],"...",sep=""),""),
main = ifelse(variable==1,paste("... to shock η", shock, sep = ""),"")
)}
}
# Compute (Id - Phi)^{-1}:
PHI <- make.PHI(Phi)
sum.PHI.k <- solve(diag(dim(PHI)[1]) - PHI)[1:n,1:n]
loss <- function(param){
B <- matrix(param,n,n)
X <- Omega - B %*% t(B)
Theta <- sum.PHI.k[1:n,1:n] %*% B
loss <- 100000 * ( sum(X^2) + Theta[1,2]^2 + Theta[1,3]^2 + B[2,3]^2)
return(loss)
}
res.opt <- optim(c(diag(n)),loss,method="BFGS",hessian=FALSE)
print(res.opt$par)
B <- matrix(res.opt$par,n,n)
n <- dim(Y)[2] # number of endogenous variables
par(mfrow = c(n, n))
par(plt = c(.3, .95, .2, .8))
Model <- list(c = c, Phi = Phi, B = B)
names.var <- c("Inflation", "Output gap", "Interest rate")
for (variable in 1:n) {
for (shock in 1:n) {
eta0 <- rep(0, n)
eta0[shock] <- 1
res.sim <- simul.VAR(c = NaN, Phi, B, nb.sim = nb.sim, indic.IRF = 1,
u.shock = eta0)
plot(res.sim[, variable], type = "l", lwd = 2, las = 1,
xlab = "", ylab = ifelse(shock==1,
paste("Resp. of ",
names.var[variable],"...",sep=""),""),
main = ifelse(variable==1,paste("... to shock η", shock, sep = ""),"")
)}
}
VARselect(Y, lag.max = 24)
library(vars)   # provides 'VARselect' function
library(IdSS)   # dataset is included here
First.date <- "1985-04-01"
Last.date  <- "2019-01-01"
# First.date <- QuarterlyUS$date[1]
# Last.date  <- tail(QuarterlyUS$date,1)
data <- QuarterlyUS
data <- data[(data$date >= First.date) & (data$date <= Last.date), ]
TT <- dim(data)[1]
data$dy <- c(NaN,log(data$GDPC1[2:TT]/data$GDPC1[1:(TT-1)]))
data$pi <- c(NaN,log(data$GDPDEF[2:TT]/data$GDPDEF[1:(TT-1)]))
data <- data[complete.cases(data),]
Y <- data[c("dy","pi","FFR")]
#VARselect(Y, lag.max = 24)
p <- 6
estVAR <- VAR(Y, p = p) # estimate the VAR model
Phi <- Acoef(estVAR)
eps <- residuals(estVAR)
Omega <- var(eps) # covariance matrix of OLS residuals
B <- t(chol(Omega)) # Cholesky decomposition of Omega (lower triangular)
nb.sim <- 100
n <- dim(Y)[2] # number of endogenous variables
par(mfrow = c(n, n))
par(plt = c(.3, .95, .2, .8))
Model <- list(c = c, Phi = Phi, B = B)
names.var <- c("Inflation", "Output gap", "Interest rate")
for (variable in 1:n) {
for (shock in 1:n) {
eta0 <- rep(0, n)
eta0[shock] <- 1
res.sim <- simul.VAR(c = NaN, Phi, B, nb.sim = nb.sim, indic.IRF = 1,
u.shock = eta0)
plot(res.sim[, variable], type = "l", lwd = 2, las = 1,
xlab = "", ylab = ifelse(shock==1,
paste("Resp. of ",
names.var[variable],"...",sep=""),""),
main = ifelse(variable==1,paste("... to shock η", shock, sep = ""),"")
)}
}
# Compute (Id - Phi)^{-1}:
PHI <- make.PHI(Phi)
sum.PHI.k <- solve(diag(dim(PHI)[1]) - PHI)[1:n,1:n]
loss <- function(param){
B <- matrix(param,n,n)
X <- Omega - B %*% t(B)
Theta <- sum.PHI.k[1:n,1:n] %*% B
loss <- 100000 * ( sum(X^2) + Theta[1,2]^2 + Theta[1,3]^2 + B[2,3]^2)
return(loss)
}
res.opt <- optim(c(diag(n)),loss,method="BFGS",hessian=FALSE)
print(res.opt$par)
B <- matrix(res.opt$par,n,n)
n <- dim(Y)[2] # number of endogenous variables
par(mfrow = c(n, n))
par(plt = c(.3, .95, .2, .8))
Model <- list(c = c, Phi = Phi, B = B)
names.var <- c("Inflation", "Output gap", "Interest rate")
for (variable in 1:n) {
for (shock in 1:n) {
eta0 <- rep(0, n)
eta0[shock] <- 1
res.sim <- simul.VAR(c = NaN, Phi, B, nb.sim = nb.sim, indic.IRF = 1,
u.shock = eta0)
plot(res.sim[, variable], type = "l", lwd = 2, las = 1,
xlab = "", ylab = ifelse(shock==1,
paste("Resp. of ",
names.var[variable],"...",sep=""),""),
main = ifelse(variable==1,paste("... to shock η", shock, sep = ""),"")
)}
}
library(vars)   # provides 'VARselect' function
library(IdSS)   # dataset is included here
First.date <- "1975-04-01"
Last.date  <- "2019-01-01"
# First.date <- QuarterlyUS$date[1]
# Last.date  <- tail(QuarterlyUS$date,1)
data <- QuarterlyUS
data <- data[(data$date >= First.date) & (data$date <= Last.date), ]
TT <- dim(data)[1]
data$dy <- c(NaN,log(data$GDPC1[2:TT]/data$GDPC1[1:(TT-1)]))
data$pi <- c(NaN,log(data$GDPDEF[2:TT]/data$GDPDEF[1:(TT-1)]))
data <- data[complete.cases(data),]
Y <- data[c("dy","pi","FFR")]
#VARselect(Y, lag.max = 24)
p <- 6
estVAR <- VAR(Y, p = p) # estimate the VAR model
Phi <- Acoef(estVAR)
eps <- residuals(estVAR)
Omega <- var(eps) # covariance matrix of OLS residuals
B <- t(chol(Omega)) # Cholesky decomposition of Omega (lower triangular)
nb.sim <- 100
n <- dim(Y)[2] # number of endogenous variables
par(mfrow = c(n, n))
par(plt = c(.3, .95, .2, .8))
Model <- list(c = c, Phi = Phi, B = B)
names.var <- c("Inflation", "Output gap", "Interest rate")
for (variable in 1:n) {
for (shock in 1:n) {
eta0 <- rep(0, n)
eta0[shock] <- 1
res.sim <- simul.VAR(c = NaN, Phi, B, nb.sim = nb.sim, indic.IRF = 1,
u.shock = eta0)
plot(res.sim[, variable], type = "l", lwd = 2, las = 1,
xlab = "", ylab = ifelse(shock==1,
paste("Resp. of ",
names.var[variable],"...",sep=""),""),
main = ifelse(variable==1,paste("... to shock η", shock, sep = ""),"")
)}
}
# Compute (Id - Phi)^{-1}:
PHI <- make.PHI(Phi)
sum.PHI.k <- solve(diag(dim(PHI)[1]) - PHI)[1:n,1:n]
loss <- function(param){
B <- matrix(param,n,n)
X <- Omega - B %*% t(B)
Theta <- sum.PHI.k[1:n,1:n] %*% B
loss <- 100000 * ( sum(X^2) + Theta[1,2]^2 + Theta[1,3]^2 + B[2,3]^2)
return(loss)
}
res.opt <- optim(c(diag(n)),loss,method="BFGS",hessian=FALSE)
print(res.opt$par)
B <- matrix(res.opt$par,n,n)
n <- dim(Y)[2] # number of endogenous variables
par(mfrow = c(n, n))
par(plt = c(.3, .95, .2, .8))
Model <- list(c = c, Phi = Phi, B = B)
names.var <- c("Inflation", "Output gap", "Interest rate")
for (variable in 1:n) {
for (shock in 1:n) {
eta0 <- rep(0, n)
eta0[shock] <- 1
res.sim <- simul.VAR(c = NaN, Phi, B, nb.sim = nb.sim, indic.IRF = 1,
u.shock = eta0)
plot(res.sim[, variable], type = "l", lwd = 2, las = 1,
xlab = "", ylab = ifelse(shock==1,
paste("Resp. of ",
names.var[variable],"...",sep=""),""),
main = ifelse(variable==1,paste("... to shock η", shock, sep = ""),"")
)}
}
library(vars)   # provides 'VARselect' function
library(IdSS)   # dataset is included here
First.date <- "1975-04-01"
Last.date  <- "2019-01-01"
# First.date <- QuarterlyUS$date[1]
# Last.date  <- tail(QuarterlyUS$date,1)
data <- QuarterlyUS
data <- data[(data$date >= First.date) & (data$date <= Last.date), ]
TT <- dim(data)[1]
data$dy <- c(NaN,log(data$GDPC1[2:TT]/data$GDPC1[1:(TT-1)]))
data$pi <- c(NaN,log(data$GDPDEF[2:TT]/data$GDPDEF[1:(TT-1)]))
data <- data[complete.cases(data),]
Y <- data[c("dy","pi","FFR")]
data <- USmonthly
TT <- dim(data)[1]
data$dy <- c(NaN,data$LIP[2:TT]-data$LIP[1:(TT-1)])
data$pi <- c(NaN,data$LCPI[2:TT]-data$LCPI[1:(TT-1)])
data <- data[complete.cases(data),]
Y <- data[c("dy","pi","FFR")]
#VARselect(Y, lag.max = 24)
p <- 6
estVAR <- VAR(Y, p = p) # estimate the VAR model
Phi <- Acoef(estVAR)
eps <- residuals(estVAR)
Omega <- var(eps) # covariance matrix of OLS residuals
B <- t(chol(Omega)) # Cholesky decomposition of Omega (lower triangular)
nb.sim <- 100
n <- dim(Y)[2] # number of endogenous variables
par(mfrow = c(n, n))
par(plt = c(.3, .95, .2, .8))
Model <- list(c = c, Phi = Phi, B = B)
names.var <- c("Inflation", "Output gap", "Interest rate")
for (variable in 1:n) {
for (shock in 1:n) {
eta0 <- rep(0, n)
eta0[shock] <- 1
res.sim <- simul.VAR(c = NaN, Phi, B, nb.sim = nb.sim, indic.IRF = 1,
u.shock = eta0)
plot(res.sim[, variable], type = "l", lwd = 2, las = 1,
xlab = "", ylab = ifelse(shock==1,
paste("Resp. of ",
names.var[variable],"...",sep=""),""),
main = ifelse(variable==1,paste("... to shock η", shock, sep = ""),"")
)}
}
# Compute (Id - Phi)^{-1}:
PHI <- make.PHI(Phi)
sum.PHI.k <- solve(diag(dim(PHI)[1]) - PHI)[1:n,1:n]
loss <- function(param){
B <- matrix(param,n,n)
X <- Omega - B %*% t(B)
Theta <- sum.PHI.k[1:n,1:n] %*% B
loss <- 100000 * ( sum(X^2) + Theta[1,2]^2 + Theta[1,3]^2 + B[2,3]^2)
return(loss)
}
res.opt <- optim(c(diag(n)),loss,method="BFGS",hessian=FALSE)
print(res.opt$par)
B <- matrix(res.opt$par,n,n)
n <- dim(Y)[2] # number of endogenous variables
par(mfrow = c(n, n))
par(plt = c(.3, .95, .2, .8))
Model <- list(c = c, Phi = Phi, B = B)
names.var <- c("Inflation", "Output gap", "Interest rate")
for (variable in 1:n) {
for (shock in 1:n) {
eta0 <- rep(0, n)
eta0[shock] <- 1
res.sim <- simul.VAR(c = NaN, Phi, B, nb.sim = nb.sim, indic.IRF = 1,
u.shock = eta0)
plot(res.sim[, variable], type = "l", lwd = 2, las = 1,
xlab = "", ylab = ifelse(shock==1,
paste("Resp. of ",
names.var[variable],"...",sep=""),""),
main = ifelse(variable==1,paste("... to shock η", shock, sep = ""),"")
)}
}
library(vars)   # provides 'VARselect' function
library(IdSS)   # dataset is included here
First.date <- "1975-04-01"
Last.date  <- "2019-01-01"
# First.date <- QuarterlyUS$date[1]
# Last.date  <- tail(QuarterlyUS$date,1)
data <- QuarterlyUS
data <- data[(data$date >= First.date) & (data$date <= Last.date), ]
TT <- dim(data)[1]
data$dy <- c(NaN,log(data$GDPC1[2:TT]/data$GDPC1[1:(TT-1)]))
data$pi <- c(NaN,log(data$GDPDEF[2:TT]/data$GDPDEF[1:(TT-1)]))
data <- data[complete.cases(data),]
Y <- data[c("dy","pi","FFR")]
data <- USmonthly
TT <- dim(data)[1]
data$dy <- c(NaN,data$LIP[2:TT]-data$LIP[1:(TT-1)])
data$pi <- c(NaN,data$LCPI[2:TT]-data$LCPI[1:(TT-1)])
data <- data[complete.cases(data),]
Y <- data[c("dy","pi","FFR")]
#VARselect(Y, lag.max = 24)
p <- 2
estVAR <- VAR(Y, p = p) # estimate the VAR model
Phi <- Acoef(estVAR)
eps <- residuals(estVAR)
Omega <- var(eps) # covariance matrix of OLS residuals
B <- t(chol(Omega)) # Cholesky decomposition of Omega (lower triangular)
nb.sim <- 100
n <- dim(Y)[2] # number of endogenous variables
par(mfrow = c(n, n))
par(plt = c(.3, .95, .2, .8))
Model <- list(c = c, Phi = Phi, B = B)
names.var <- c("Inflation", "Output gap", "Interest rate")
for (variable in 1:n) {
for (shock in 1:n) {
eta0 <- rep(0, n)
eta0[shock] <- 1
res.sim <- simul.VAR(c = NaN, Phi, B, nb.sim = nb.sim, indic.IRF = 1,
u.shock = eta0)
plot(res.sim[, variable], type = "l", lwd = 2, las = 1,
xlab = "", ylab = ifelse(shock==1,
paste("Resp. of ",
names.var[variable],"...",sep=""),""),
main = ifelse(variable==1,paste("... to shock η", shock, sep = ""),"")
)}
}
# Compute (Id - Phi)^{-1}:
PHI <- make.PHI(Phi)
sum.PHI.k <- solve(diag(dim(PHI)[1]) - PHI)[1:n,1:n]
loss <- function(param){
B <- matrix(param,n,n)
X <- Omega - B %*% t(B)
Theta <- sum.PHI.k[1:n,1:n] %*% B
loss <- 100000 * ( sum(X^2) + Theta[1,2]^2 + Theta[1,3]^2 + B[2,3]^2)
return(loss)
}
res.opt <- optim(c(diag(n)),loss,method="BFGS",hessian=FALSE)
print(res.opt$par)
B <- matrix(res.opt$par,n,n)
n <- dim(Y)[2] # number of endogenous variables
par(mfrow = c(n, n))
par(plt = c(.3, .95, .2, .8))
Model <- list(c = c, Phi = Phi, B = B)
names.var <- c("Inflation", "Output gap", "Interest rate")
for (variable in 1:n) {
for (shock in 1:n) {
eta0 <- rep(0, n)
eta0[shock] <- 1
res.sim <- simul.VAR(c = NaN, Phi, B, nb.sim = nb.sim, indic.IRF = 1,
u.shock = eta0)
plot(res.sim[, variable], type = "l", lwd = 2, las = 1,
xlab = "", ylab = ifelse(shock==1,
paste("Resp. of ",
names.var[variable],"...",sep=""),""),
main = ifelse(variable==1,paste("... to shock η", shock, sep = ""),"")
)}
}
